// <auto-generated />
using System;
using CommunicationService.Fundamental;
using CommunicationService.Fundamental.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CommunicationService.Migrations
{
    [DbContext(typeof(CommunicationDbContext))]
    partial class CommunicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CommunicationService.Classifications.DataModels.Classification", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Classification");
                });

            modelBuilder.Entity("CommunicationService.MetadataTypes.Models.MetadataType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("MetadataType");
                });

            modelBuilder.Entity("CommunicationService.MetadataTypes.Models.MetadataTypeClassification", b =>
                {
                    b.Property<Guid>("ClassificationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MetadataTypeId")
                        .HasColumnType("uuid");

                    b.HasKey("ClassificationId", "MetadataTypeId");

                    b.HasIndex("MetadataTypeId");

                    b.ToTable("MetadataTypeClassification");
                });

            modelBuilder.Entity("CommunicationService.Receivers.DataModels.Receiver", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UniqueName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("UniqueName")
                        .IsUnique();

                    b.ToTable("Receiver");
                });

            modelBuilder.Entity("CommunicationService.Receivers.DataModels.ReceiverClassification", b =>
                {
                    b.Property<Guid>("ClassificationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uuid");

                    b.HasKey("ClassificationId", "ReceiverId");

                    b.HasIndex("ReceiverId");

                    b.ToTable("ReceiverClassification");
                });

            modelBuilder.Entity("CommunicationService.Receivers.DataModels.ReceiverMetadata", b =>
                {
                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MetadataTypeId")
                        .HasColumnType("uuid");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ReceiverId", "MetadataTypeId");

                    b.HasIndex("MetadataTypeId");

                    b.ToTable("ReceiverMetadata");
                });

            modelBuilder.Entity("CommunicationService.MetadataTypes.Models.MetadataTypeClassification", b =>
                {
                    b.HasOne("CommunicationService.Classifications.DataModels.Classification", "Classification")
                        .WithMany()
                        .HasForeignKey("ClassificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CommunicationService.MetadataTypes.Models.MetadataType", "MetadataType")
                        .WithMany()
                        .HasForeignKey("MetadataTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classification");

                    b.Navigation("MetadataType");
                });

            modelBuilder.Entity("CommunicationService.Receivers.DataModels.ReceiverClassification", b =>
                {
                    b.HasOne("CommunicationService.Classifications.DataModels.Classification", "Classification")
                        .WithMany()
                        .HasForeignKey("ClassificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CommunicationService.Receivers.DataModels.Receiver", "Receiver")
                        .WithMany()
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classification");

                    b.Navigation("Receiver");
                });

            modelBuilder.Entity("CommunicationService.Receivers.DataModels.ReceiverMetadata", b =>
                {
                    b.HasOne("CommunicationService.MetadataTypes.Models.MetadataType", "MetadataType")
                        .WithMany()
                        .HasForeignKey("MetadataTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CommunicationService.Receivers.DataModels.Receiver", "Receiver")
                        .WithMany("Metadatas")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MetadataType");

                    b.Navigation("Receiver");
                });

            modelBuilder.Entity("CommunicationService.Receivers.DataModels.Receiver", b =>
                {
                    b.Navigation("Metadatas");
                });
#pragma warning restore 612, 618
        }
    }
}
